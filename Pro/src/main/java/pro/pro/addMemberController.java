 

package pro.pro;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.Properties;
import java.util.ResourceBundle;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import org.controlsfx.control.Notifications;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.geometry.Pos;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.image.Image;
import javafx.stage.Stage;
import javafx.util.Duration;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;






public class addMemberController implements Initializable {
	
	@FXML
	private TextField tfReg;
	@FXML
	private TextField tfName;
	@FXML
	private TextField tfAddress;
	@FXML
	private TextField tfTel;
	@FXML
	private TextField tfMail;
	@FXML
	private RadioButton M;
	@FXML
	private ToggleGroup Gen;
	@FXML
	private RadioButton F;
	@FXML
	private DatePicker Date;
	@FXML
	private TextField tfHight;
	@FXML
	private TextField tfWight;
	@FXML
	private ChoiceBox Aim;
	
	public String gendre;
	//DateFormat dateFormat = new SimpleDateFormat("mm-dd-yyyy");
	
	public LocalDate Today= java.time.LocalDate.now();
	public int age;
	String today;
	double BMI= 0.0;
	double BMR= 0.0;
	int sex;
	int NextReg;

	//String today = dateFormat.format(Today);
	
	ObservableList<String> list= FXCollections.observableArrayList("Lose weight/fat","Gain weight/muscle","Lose fat and gain muscle","Get healthy in body and mind'");
	@FXML
	public void m(ActionEvent event) {
		// TODO Autogenerated
		gendre="Male";
		sex=1;
	}
	@FXML
	public void f(ActionEvent event) {
		// TODO Autogenerated
		gendre="Female";
		sex=0;
	}
	
	// Event Listener on Button.onAction
	@FXML
	public void Clear(ActionEvent event) throws SQLException, JRException {
		
		tfReg.setText(null);
		tfName.setText(null);
		tfWight.setText(null);
		tfHight.setText(null);
		tfMail.setText(null);
		tfTel.setText(null);
		tfAddress.setText(null);
		M.setSelected(false);
		F.setSelected(false);
		Date.setValue(null);
		Aim.getSelectionModel().clearSelection();
		AutoRegNum();
		
	}
	// Event Listener on Button.onAction
	@FXML
	public void Add(ActionEvent event) throws SQLException, IOException, JRException {
		calAge();
		BMI();
		BMR();
		
		
		
		try {
			Connection con= Dbconnecter.connect();
			PreparedStatement ps =null;
			String sql= "INSERT INTO Member(Reg,Name,Address,Tell,Mail,Gender,DOB,Hight,Weight,Aim,JoinDate,Age) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
			ps= con.prepareStatement(sql);
			ps.setString(1, tfReg.getText());
			ps.setString(2, tfName.getText());
			ps.setString(3, tfAddress.getText());
			ps.setString(4, tfTel.getText());
			ps.setString(5, tfMail.getText());
			ps.setString(6, gendre);
			ps.setString(7, ((TextField)Date.getEditor()).getText());
			ps.setString(8, tfHight.getText());
			ps.setString(9, tfWight.getText());
			ps.setString(10, (String) Aim.getValue());
			ps.setString(11, today);
			ps.setString(12, Integer.toString(age));
			ps.execute();
			ps.close();
			con.close();
		}
			catch(Exception e) {
				System.out.println(e);
				NC();
			}
			
			try {
			Connection con= Dbconnecter.connect();
			PreparedStatement ps =null;
			String sql= "INSERT INTO Fitness(REG,BMI,BMR) VALUES(?,?,?)";
			ps= con.prepareStatement(sql);
			ps.setString(1, tfReg.getText());
			ps.setString(2, Double.toString(BMI));
			ps.setString(3, Double.toString(BMR));
			ps.execute();
			System.out.println("insert ok");
			QR();
			NewMemberReport();
			mail(); 
			
			ps.close();
			con.close();
			}
			catch(Exception e) {
				System.out.println(e);
				NC();
			}
			try {
				Connection con= Dbconnecter.connect();
				PreparedStatement ps =null;
				String sql= "INSERT INTO Schedule(scheduleRegNo) VALUES(?)";
				ps= con.prepareStatement(sql);
				ps.setString(1, tfReg.getText());
				ps.execute();
				System.out.println("insert ok");
				C();
				ps.close();
				con.close();
				}
				catch(Exception e) {
					System.out.println(e);
					NC();
				}
		
			
	}
	
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		
		Aim.setItems(list);
		try {
			AutoRegNum();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	public void AutoRegNum() throws SQLException {
		
		Connection con= Dbconnecter.connect();
		PreparedStatement ps =null;
		ResultSet rs=null;
		String sql= "SELECT Max(Reg) from Member desc";
		ps= con.prepareStatement(sql);
		rs = ps.executeQuery();
		NextReg =(1+0+Integer.parseInt(rs.getString(1)));
		tfReg.setText(Integer.toString(NextReg));
	}
	public void calAge() {
		LocalDate birthyear= Date.getValue();
		age= (Today.getYear()-birthyear.getYear());
		today= Today.toString();
	}
	public void BMI() {
		Double weight= Double.parseDouble(tfWight.getText());
		Double height= (Double.parseDouble(tfHight.getText())/100);
		BMI = weight / (height * height);
	}
	public void BMR() {
		final int UserSexFEMale = 0;
		double weight=Double.parseDouble(tfWight.getText());
		double height=Double.parseDouble(tfHight.getText());
		
        if (sex == UserSexFEMale) {
            BMR = 655 + (9.6 * weight) + (1.8 * height) - (4.7 * age);
        } else {
            BMR = 66 + (13.8 * weight) + (5.0 * height) - (6.8 * age);
        }
	}

	public void NewMemberReport() throws JRException{
		Connection con;
		try {
			con = Dbconnecter.connect();
			String Srt =("SELECT * from Member,Fitness where Member.Reg ="+ tfReg.getText() +" AND Fitness.Reg="+ tfReg.getText());
			JasperDesign jdesign = JRXmlLoader.load("src\\main\\resources\\pro\\pro\\Member.jrxml");
			JRDesignQuery updateQuery =new JRDesignQuery();
			updateQuery.setText(Srt);
			jdesign.setQuery(updateQuery);
			JasperReport Jreport =JasperCompileManager.compileReport(jdesign);
			JasperPrint JasperPrint =JasperFillManager.fillReport(Jreport,null,con);
			JasperViewer.viewReport(JasperPrint, false);
			JasperExportManager.exportReportToPdfFile(JasperPrint, "src\\main\\resources\\pro\\pro\\report\\"+tfReg.getText()+".pdf" );
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	public void C() throws IOException {
		Parent root = FXMLLoader.load(getClass().getResource("Completed.fxml"));
		Scene scene = new Scene(root);
		Stage primaryStage = new Stage();
		primaryStage.setTitle("Successful");
		primaryStage.setScene(scene);
		primaryStage.show();
	}
	public void NC() throws IOException {
		Parent root = FXMLLoader.load(getClass().getResource("NotComplete.fxml"));
		Scene scene = new Scene(root);
		Stage primaryStage = new Stage();
		primaryStage.setTitle("Error");
		primaryStage.setScene(scene);
		primaryStage.show();
	}
	public void QR() {
		try {
				String content = (tfReg.getText());
				String pathToStore = ("src\\main\\resources\\pro\\pro\\QR\\"+tfReg.getText()+".jpg");
		        BitMatrix bitMatrix = new MultiFormatWriter().encode(content, BarcodeFormat.QR_CODE, 500, 500);
		        MatrixToImageWriter.writeToPath(bitMatrix, "jpg", Paths.get(pathToStore));
		        
		        System.out.println("QR Sucssus");
		}catch(Exception e) {
			
		} 
		
	}
	public void mail() {
		
		
		
		String to = tfMail.getText();

        String from = "solofitness.group.1@gmail.com";

        Properties properties = System.getProperties();

        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "465");
        properties.put("mail.smtp.ssl.enable", "true");
        properties.put("mail.smtp.auth", "true");

        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {

            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("solofitness.group.1@gmail.com", "sjxluszbbeswovuq");

            }
        });

        session.setDebug(true);

        try {
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(from));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            message.setSubject("SOLO fitness");


            String msg =("Congratulations to you..!, You are now member of solo fitness.");

            MimeBodyPart mimeBodyPart = new MimeBodyPart();
            mimeBodyPart.setContent(msg, "text/html");

            Multipart multipart = new MimeMultipart();
            multipart.addBodyPart(mimeBodyPart);

            MimeBodyPart attachmentBodyPart = new MimeBodyPart();
            attachmentBodyPart.attachFile(new File("src/main/resources/pro/pro/QR/"+tfReg.getText()+".jpg"));
			//Image QR =new Image(getClass().getResourceAsStream("QR/"+tfSearch.getText()+".jpg"));
            //attachmentBodyPart.attachFile(new File("C:\\Users\\Nirmala Malshan\\Desktop\\Poject\\"+tfReg.getText()+".pdf"));
            multipart.addBodyPart(attachmentBodyPart);
          //  message.setContent(multipart);

            MimeBodyPart attachmentBodyPart2 = new MimeBodyPart();
            //attachmentBodyPart2.attachFile(new File("C:\\Users\\Nirmala Malshan\\Desktop\\Poject\\Me\\Pro\\src\\main\\resources\\pro\\pro\\QR\\"+tfReg.getText()+".jpg"));
            attachmentBodyPart2.attachFile(new File("src/main/resources/pro/pro/report/"+tfReg.getText()+".pdf"));
			//attachmentBodyPart2.(getClass().getResourceAsStream("QR/"+tfSearch.getText()+".jpg"));
            multipart.addBodyPart(attachmentBodyPart2);
            message.setContent(multipart);

            System.out.println("Sending...");
            Transport.send(message);

            System.out.println("sent messge successfully....");
            Notifications notification = Notifications.create()
					.title("Send Mail")
					.text("sent messge successfully....")
					.hideAfter(Duration.seconds(5))
					.position(Pos.BOTTOM_RIGHT);
			notification.show();

        } catch (MessagingException mex) {

            System.out.println("not Sending...");
            Notifications notification = Notifications.create()
					.title("Send Mail")
					.text("Can't sent messge. Check the connection..!")
					.hideAfter(Duration.seconds(5))
					.position(Pos.BOTTOM_RIGHT);
			notification.show();
            mex.printStackTrace();

        } catch (IOException e) {
            throw new RuntimeException(e);
        }
	}
}
